<?xml version="1.0" encoding="utf-8"?>
<modification>
		<name>Moneymaker2 Mods 4-2 (bestseller, featured, latest, special)</name>
		<version>2.7.3</version>
		<author>RGB</author>
		<code>moneymaker2part42</code>
		<link>https://2.mnmkr.com</link>
		<file path="catalog/controller/module/bestseller.php">
				<operation>
						<search><![CDATA[$this->load->model('catalog/product');]]></search>
						<add position="before"><![CDATA[
				/*mmr*/
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}
				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				$data['moneymaker2_modules_bestseller_carousel'] = $this->config->get('moneymaker2_modules_bestseller_carousel');
				$data['moneymaker2_modules_bestseller_carousel_autoplay'] = $this->config->get('moneymaker2_modules_bestseller_carousel_autoplay');
				if ($data['moneymaker2_modules_bestseller_carousel']) {
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.moneymaker2.css');
					$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
				}
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($result['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
												'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($result[$value['field']])&&$result[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

				if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
				if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&$this->config->get('moneymaker2_modules_bestseller_code')) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}
				$moneymaker2_addtocart_tooltip = '';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
						$moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
				} else if (!$data['moneymaker2_common_price_detached']) {
						$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
				}
				if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }
				$moneymaker2_addtocart_class = 'btn ';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						$moneymaker2_addtocart_class .= 'disabled ';
				}
				if (!$special) {
						$moneymaker2_addtocart_class .= 'btn-primary';
				} else {
						$moneymaker2_addtocart_class .= 'btn-danger';
				}
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$moneymaker2_quickorder_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
						} else {
								$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
						}
						$moneymaker2_quickorder_class = 'btn btn-default';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_class .= ' disabled';
						}
				}
				$data['products'][] = array(
						'stickers'              => $moneymaker2_stickers,
						'stock'                 => $this->config->get('moneymaker2_modules_bestseller_stock') ? $moneymaker2_stock : '',
						'code'                  => $this->config->get('moneymaker2_modules_bestseller_code') ? $moneymaker2_code : '',
						'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
						'quantity'              => $result['quantity'],
						'sort_order'            => $result['sort_order'],
						'review_count'          => $result['reviews'],
						'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
						'addtocart_class'       => $moneymaker2_addtocart_class,
						'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
						'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',]]></search>
						<add position="replace"><![CDATA['description' => $this->config->get('moneymaker2_modules_bestseller_description') ? utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..' : '',]]></add>
				</operation>
		</file>

		<file path="catalog/controller/module/featured.php">
				<operation>
						<search><![CDATA[$this->load->model('catalog/product');]]></search>
						<add position="before"><![CDATA[
				/*mmr*/
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}
				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				$data['moneymaker2_modules_featured_carousel'] = $this->config->get('moneymaker2_modules_featured_carousel');
				$data['moneymaker2_modules_featured_carousel_autoplay'] = $this->config->get('moneymaker2_modules_featured_carousel_autoplay');
				if ($data['moneymaker2_modules_featured_carousel']) {
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.moneymaker2.css');
					$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
				}
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$product_info['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($product_info['special']/$product_info['price'])*100))."%" : "-".$this->currency->format((($product_info['special'])-($product_info['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($product_info['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($product_info['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
												'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($product_info['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($product_info['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($product_info['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($product_info['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($product_info[$value['field']])&&$product_info[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

				if ($product_info['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $product_info['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
				if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($product_info[$this->config->get('moneymaker2_catalog_products_code_field')])&&$product_info[$this->config->get('moneymaker2_catalog_products_code_field')]&&$this->config->get('moneymaker2_modules_featured_code')) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$product_info[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}
				$moneymaker2_addtocart_tooltip = '';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
						if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
						$moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
				} else if (!$data['moneymaker2_common_price_detached']) {
						$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
				}
				if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }
				$moneymaker2_addtocart_class = 'btn ';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
						$moneymaker2_addtocart_class .= 'disabled ';
				}
				if (!$special) {
						$moneymaker2_addtocart_class .= 'btn-primary';
				} else {
						$moneymaker2_addtocart_class .= 'btn-danger';
				}
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$moneymaker2_quickorder_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
								$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
						} else {
								$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
						}
						$moneymaker2_quickorder_class = 'btn btn-default';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
								$moneymaker2_quickorder_class .= ' disabled';
						}
				}
				$data['products'][] = array(
						'stickers'              => $moneymaker2_stickers,
						'stock'                 => $this->config->get('moneymaker2_modules_featured_stock') ? $moneymaker2_stock : '',
						'code'                  => $this->config->get('moneymaker2_modules_featured_code') ? $moneymaker2_code : '',
						'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0 ? true : false,
						'quantity'              => $product_info['quantity'],
						'sort_order'            => $product_info['sort_order'],
						'review_count'          => $product_info['reviews'],
						'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
						'addtocart_class'       => $moneymaker2_addtocart_class,
						'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
						'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',]]></search>
						<add position="replace"><![CDATA['description' => $this->config->get('moneymaker2_modules_featured_description') ? utf8_substr(strip_tags(html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..' : '',]]></add>
				</operation>
		</file>

		<file path="catalog/controller/module/latest.php">
				<operation>
						<search><![CDATA[$this->load->model('catalog/product');]]></search>
						<add position="before"><![CDATA[
				/*mmr*/
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}
				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				$data['moneymaker2_modules_latest_carousel'] = $this->config->get('moneymaker2_modules_latest_carousel');
				$data['moneymaker2_modules_latest_carousel_autoplay'] = $this->config->get('moneymaker2_modules_latest_carousel_autoplay');
				if ($data['moneymaker2_modules_latest_carousel']) {
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.moneymaker2.css');
					$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
				}
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($result['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
												'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($result[$value['field']])&&$result[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

				if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
				if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&$this->config->get('moneymaker2_modules_latest_code')) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}
				$moneymaker2_addtocart_tooltip = '';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
						$moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
				} else if (!$data['moneymaker2_common_price_detached']) {
						$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
				}
				if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }
				$moneymaker2_addtocart_class = 'btn ';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						$moneymaker2_addtocart_class .= 'disabled ';
				}
				if (!$special) {
						$moneymaker2_addtocart_class .= 'btn-primary';
				} else {
						$moneymaker2_addtocart_class .= 'btn-danger';
				}
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$moneymaker2_quickorder_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
						} else {
								$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
						}
						$moneymaker2_quickorder_class = 'btn btn-default';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_class .= ' disabled';
						}
				}
				$data['products'][] = array(
						'stickers'              => $moneymaker2_stickers,
						'stock'                 => $this->config->get('moneymaker2_modules_latest_stock') ? $moneymaker2_stock : '',
						'code'                  => $this->config->get('moneymaker2_modules_latest_code') ? $moneymaker2_code : '',
						'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
						'quantity'              => $result['quantity'],
						'sort_order'            => $result['sort_order'],
						'review_count'          => $result['reviews'],
						'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
						'addtocart_class'       => $moneymaker2_addtocart_class,
						'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
						'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',]]></search>
						<add position="replace"><![CDATA['description' => $this->config->get('moneymaker2_modules_latest_description') ? utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..' : '',]]></add>
				</operation>
		</file>

		<file path="catalog/controller/module/special.php">
				<operation>
						<search><![CDATA[$this->load->model('catalog/product');]]></search>
						<add position="before"><![CDATA[
				/*mmr*/
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}
				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				$data['moneymaker2_modules_special_carousel'] = $this->config->get('moneymaker2_modules_special_carousel');
				$data['moneymaker2_modules_special_carousel_autoplay'] = $this->config->get('moneymaker2_modules_special_carousel_autoplay');
				if ($data['moneymaker2_modules_special_carousel']) {
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
					$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.moneymaker2.css');
					$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
				}
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($result['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
												'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($result[$value['field']])&&$result[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

				if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
				if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&$this->config->get('moneymaker2_modules_special_code')) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}
				$moneymaker2_addtocart_tooltip = '';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
						$moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
				} else if (!$data['moneymaker2_common_price_detached']) {
						$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
				}
				if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }
				$moneymaker2_addtocart_class = 'btn ';
				if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
						$moneymaker2_addtocart_class .= 'disabled ';
				}
				if (!$special) {
						$moneymaker2_addtocart_class .= 'btn-primary';
				} else {
						$moneymaker2_addtocart_class .= 'btn-danger';
				}
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$moneymaker2_quickorder_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
						} else {
								$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
						}
						$moneymaker2_quickorder_class = 'btn btn-default';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_quickorder_class .= ' disabled';
						}
				}
				$data['products'][] = array(
						'stickers'              => $moneymaker2_stickers,
						'stock'                 => $this->config->get('moneymaker2_modules_special_stock') ? $moneymaker2_stock : '',
						'code'                  => $this->config->get('moneymaker2_modules_special_code') ? $moneymaker2_code : '',
						'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
						'quantity'              => $result['quantity'],
						'sort_order'            => $result['sort_order'],
						'review_count'          => $result['reviews'],
						'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
						'addtocart_class'       => $moneymaker2_addtocart_class,
						'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
						'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',]]></search>
						<add position="replace"><![CDATA['description' => $this->config->get('moneymaker2_modules_special_description') ? utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..' : '',]]></add>
				</operation>
		</file>
		<file path="catalog/controller/module/category.php">
		<operation>
		<search><![CDATA[$data['categories'] = array();]]></search>
		<add position="after"><![CDATA[
		/*mmr*/
		$data['moneymaker2_modules_categories_specials'] = $this->config->get('moneymaker2_modules_categories_specials');
		if ($data['moneymaker2_modules_categories_specials']) {
			$this->load->language('common/footer');
			$data['text_special'] = $this->language->get('text_special');
			$data['special'] = $this->url->link('product/special');
		}
		$data['moneymaker2_common_categories_icons_enabled'] = $this->config->get('moneymaker2_common_categories_icons_enabled');
		$data['moneymaker2_modules_categories_icons'] = $this->config->get('moneymaker2_modules_categories_icons');
		if ($data['moneymaker2_common_categories_icons_enabled']&&$data['moneymaker2_modules_categories_icons']) {
			$data['moneymaker2_common_categories_icons'] = $this->config->get('moneymaker2_common_categories_icons');
		} else {
			$data['moneymaker2_common_categories_icons'] = null;
		}
		/*mmr*/
		]]></add>
		</operation>
		<operation>
		<search><![CDATA['category_id' => $child['category_id'],]]></search>
		<add position="after"><![CDATA[
		/*mmr*/
		'icon' => $data['moneymaker2_common_categories_icons_enabled'] ? $data['moneymaker2_common_categories_icons'][$child['category_id']] : null,
		/*mmr*/
		]]></add>
		</operation>
		<operation>
		<search><![CDATA['category_id' => $category['category_id'],]]></search>
		<add position="after"><![CDATA[
		/*mmr*/
		'icon' => $data['moneymaker2_common_categories_icons_enabled'] ? $data['moneymaker2_common_categories_icons'][$category['category_id']] : null,
		/*mmr*/
		]]></add>
		</operation>
		</file>
		<file path="catalog/controller/common/footer.php">
		<operation>
				<search><![CDATA[class ControllerCommonFooter extends Controller {]]></search>
				<add position="after"><![CDATA[
		/*mmr*/
		public function addCallback() {
		if ($this->config->get('moneymaker2_modules_callback_enabled')) {
			$this->load->language('module/moneymaker2');
			$data = array();
			$json = array();
			if (!isset($this->request->post['quickorderphone'])||!$this->request->post['quickorderphone']) {
				$json['error']['validation'] = $this->language->get('error_quickorder_phone');
			}
			if ($this->config->get('moneymaker2_common_recaptcha')&&$this->config->get('config_captcha')=='google_captcha'&&$this->config->get('google_captcha_status')) {
				$captcha = $this->load->controller('captcha/google_captcha/validate');
				if ($captcha) {
					$json['error']['validation'] = $captcha;
				}
			}
			if (!$json) {
				$data['telephone'] = (string)$this->request->post['quickorderphone'];
				if (isset($this->request->post['quickordername'])||$this->request->post['quickordername']) {
					$data['telephone'] .= " (" . (string)$this->request->post['quickordername'] . ")";
				}
				$data['comment'] = (string)$this->request->post['quickordercomment'];
				$subject = $this->config->get('config_name') . " - " . $this->language->get('text_callback_mail_subject') . " (" . date('Y.m.d H:i') . ")";
				$message  = $this->language->get('text_callback_mail_message') . "\n\n";
				$message .= $this->language->get('text_quickorder_phone') . ": " . $data['telephone'] . "\n";
				$message .= $this->language->get('text_quickorder_comment') . ": " . $data['comment'] . "\n\n";

				$mail = new Mail();
				$mail->protocol = $this->config->get('config_mail_protocol');
				$mail->parameter = $this->config->get('config_mail_parameter');
				$mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
				$mail->smtp_username = $this->config->get('config_mail_smtp_username');
				$mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
				$mail->smtp_port = $this->config->get('config_mail_smtp_port');
				$mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');
				$mail->setTo($this->config->get('moneymaker2_modules_callback_recipient'));
				$mail->setFrom($this->config->get('moneymaker2_modules_callback_sender'));
				$mail->setSender($this->language->get('text_callback_mail_subject'));
				$mail->setSubject($subject);
				$mail->setText($message);
				$mail->send();
				$json['success'] = sprintf($this->language->get('text_callback_mail_success'), date('Y.m.d H:i'));
			}
			$this->response->setOutput(json_encode($json));
		}
		}
		public function addSubscriber() {
		if ($this->config->get('moneymaker2_modules_newsletter_enabled')) {
			$this->load->language('module/moneymaker2');
			$data = array();
			$json = array();
			$this->load->model('account/customer');
			if (!isset($this->request->post['quickorderemail'])||!$this->request->post['quickorderemail']||!filter_var($this->request->post['quickorderemail'], FILTER_VALIDATE_EMAIL)) {
				$json['error']['validation'] = $this->language->get('error_quickorder_email');
			}
			if ($this->config->get('moneymaker2_common_recaptcha')&&$this->config->get('config_captcha')=='google_captcha'&&$this->config->get('google_captcha_status')) {
				$captcha = $this->load->controller('captcha/google_captcha/validate');
				if ($captcha) {
					$json['error']['validation'] = $captcha;
				}
			}
			if (!$json) {
				$data['email'] = (string)$this->request->post['quickorderemail'];
				$customer = $this->model_account_customer->getCustomerByEmail($data['email']);
				if(empty($customer)) {
					$data['telephone'] = '';
					if (isset($this->request->post['quickordername'])&&$this->request->post['quickordername']) {
						$data['firstname'] = (string)$this->request->post['quickordername'];
					} else {
						$data['firstname'] = $this->language->get('text_newsletter_subscriber');
					}
					$data['lastname'] = '';
					$data['fax'] ='';
					$data['password'] = '';
					$data['company'] =  '';
					$data['address_1'] =  '';
					$data['address_2'] ='';
					$data['tax_id'] = '';
					$data['postcode'] = '';
					$data['country_id'] = $this->config->get('config_country_id');
					$data['company_id']= '';
					$data['zone_id'] = '';
					$data['approval'] = '1';
					$data['newsletter'] = '1';
					$data['city'] =  '';
					$this->model_account_customer->addCustomer($data);
					$this->load->language('mail/forgotten');
					$password = substr(sha1(uniqid(mt_rand(), true)), 0, 10);
					$this->model_account_customer->editPassword($data['email'], $password);
					$subject = sprintf($this->language->get('text_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
					$message  = sprintf($this->language->get('text_greeting'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8')) . "\n\n";
					$message .= $this->language->get('text_password') . "\n\n";
					$message .= $password;
					$mail = new Mail();
					$mail->protocol = $this->config->get('config_mail_protocol');
					$mail->parameter = $this->config->get('config_mail_parameter');
					$mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
					$mail->smtp_username = $this->config->get('config_mail_smtp_username');
					$mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
					$mail->smtp_port = $this->config->get('config_mail_smtp_port');
					$mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');
					$mail->setTo($data['email']);
					$mail->setFrom($this->config->get('config_email'));
					$mail->setSender(html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
					$mail->setSubject(html_entity_decode($subject, ENT_QUOTES, 'UTF-8'));
					$mail->setText(html_entity_decode($message, ENT_QUOTES, 'UTF-8'));
					$mail->send();
					$json['success'] = $this->language->get('text_newsletter_new_sub_success_message');
				} else {
					if ($this->customer->isLogged()) {
						$this->model_account_customer->editNewsletter("1");
						$json['success'] = $this->language->get('text_newsletter_existing_sub_success_message');
					} else {
						$json['error']['validation'] = sprintf($this->language->get('error_newsletter_existing_sub_not_logged'), $this->url->link('account/newsletter', '', 'SSL'));
					}
				}
			}
			$this->response->setOutput(json_encode($json));
		}
		}
		/*mmr*/
		]]></add>
				</operation>
		</file>
</modification>