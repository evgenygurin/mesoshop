<?xml version="1.0" encoding="utf-8"?>
<modification>
		<name>Moneymaker2 Mods 2-2 (manufacturer, category, search, special)</name>
		<version>2.7.3</version>
		<author>RGB</author>
		<code>moneymaker2part22</code>
		<link>https://2.mnmkr.com</link>
		<file path="catalog/controller/product/search.php">
				<operation>
						<search><![CDATA[$data['button_grid'] = $this->language->get('button_grid');]]></search>
						<add position="after"><![CDATA[
				/*mmr*/
				$this->load->model('catalog/information');
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}

				$data['moneymaker2_catalog_categories_images_hide'] = $this->config->get('moneymaker2_catalog_categories_images_hide');
				$data['moneymaker2_catalog_categories_move_description'] = $this->config->get('moneymaker2_catalog_categories_move_description');
				$data['moneymaker2_common_categories_icons_enabled'] = $this->config->get('moneymaker2_common_categories_icons_enabled');
				$data['moneymaker2_common_categories_icons'] = $this->config->get('moneymaker2_common_categories_icons');
				$data['moneymaker2_catalog_default_view'] = $this->config->get('moneymaker2_catalog_layout_default');
				$data['moneymaker2_catalog_layout_switcher_hide'] = $this->config->get('moneymaker2_catalog_layout_switcher_hide');

				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($result['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
													'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($result[$value['field']])&&$result[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

						if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
						if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&(!$this->config->get('moneymaker2_catalog_products_list_code_hide')||!$this->config->get('moneymaker2_catalog_products_grid_code_hide'))) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}

						$moneymaker2_addtocart_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								 if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
								 $moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
						} else if (!$data['moneymaker2_common_price_detached']) {
								 $moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
						}
						if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }

						$moneymaker2_addtocart_class = 'btn ';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_addtocart_class .= 'disabled ';
						}
						if (!$special) {
								$moneymaker2_addtocart_class .= 'btn-primary';
						} else {
								$moneymaker2_addtocart_class .= 'btn-danger';
						}

						if ($data['moneymaker2_modules_quickorder_enabled']) {
								$moneymaker2_quickorder_tooltip = '';
								if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
										$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
										$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
								} else {
										$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								}
								$moneymaker2_quickorder_class = 'btn btn-default';
								if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
										$moneymaker2_quickorder_class .= ' disabled';
								}
						}

						$data['products'][] = array(
								'stickers'              => $moneymaker2_stickers,
								'stock'                 => $moneymaker2_stock,
								'code'                  => $moneymaker2_code,
								'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
								'quantity'              => $result['quantity'],
								'sort_order'            => $result['sort_order'],
								'review_count'          => $result['reviews'],
								'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
								'addtocart_class'       => $moneymaker2_addtocart_class,
								'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
								'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
		</file>

		<file path="catalog/controller/common/search.php">
				<operation>
						<search><![CDATA[public function index() {]]></search>
						<add position="before"><![CDATA[
				/*mmr*/
				public function ajaxsearch() {
						$this->load->model('tool/image');
						$this->load->language('common/header');
						$data = array();
						if( isset($this->request->get['search']) ) {
								function custom_escape_string($inp) {
										if(is_array($inp))
												return array_map(__METHOD__, $inp);
										if(!empty($inp) && is_string($inp)) {
												return str_replace(array('\\', "\0", "\n", "\r", "'", '"', "\x1a"), array('\\\\', '\\0', '\\n', '\\r', "\\'", '\\"', '\\Z'), $inp);
										}
										return $inp;
								}
								$keywords = custom_escape_string( $this->request->get['search'] );
								if( strlen($keywords) >= 3 ) {
										$parts = $keywords;
										$add = '';
										$add .= ' AND ((LOWER(pd.name) LIKE "%' . $this->db->escape($parts) . '%")';
										$add .= ' OR (LOWER(p.sku) LIKE "%' . $this->db->escape($parts) . '%")';
										$add .= ' OR (LOWER(p.model) LIKE "%' . $this->db->escape($parts) . '%"))';
										$add = substr( $add, 4 );
										$sql  = "SELECT DISTINCT pd.product_id, pd.name, p.image";
										if ($this->config->get('moneymaker2_header_search_ajax_code')) {
										$sql .= ", p.model, p.sku, p.upc, p.ean, p.jan, p.isbn, p.mpn";
										}
										if ($this->config->get('moneymaker2_header_search_ajax_price')) {
										$sql .= ", p.tax_class_id, p.price, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special";
										}
										$sql  .= " FROM " . DB_PREFIX . "product_description AS pd ";
										$sql .= 'LEFT JOIN ' . DB_PREFIX . 'product AS p ON p.product_id = pd.product_id ';
										$sql .= 'LEFT JOIN ' . DB_PREFIX . 'product_to_store AS p2s ON p2s.product_id = pd.product_id ';
										$sql .= 'WHERE ' . $add . ' AND p.status = 1 ';
										$sql .= 'AND pd.language_id = ' . (int)$this->config->get('config_language_id');
										$sql .= ' AND p2s.store_id =  ' . (int)$this->config->get('config_store_id');
										$sql .= ' ORDER BY p.sort_order ASC, LOWER(pd.name) ASC, LOWER(p.model) ASC';
										$sql .= ' LIMIT 9';
										$res = $this->db->query( $sql );
										if( $res ) {
												$data = ( isset($res->rows) ) ? $res->rows : $res->row;
												$basehref = 'product/product&search=' . $this->request->get['search'] . '&product_id=';
												foreach( $data as $key => $values ) {
														$data[$key] = array(
																'name' => htmlspecialchars_decode($values['name'], ENT_QUOTES),
																'code' => $this->config->get('moneymaker2_header_search_ajax_code')&&$values[$this->config->get('moneymaker2_header_search_ajax_code_field')]&&isset($values[$this->config->get('moneymaker2_header_search_ajax_code_field')]) ? $values[$this->config->get('moneymaker2_header_search_ajax_code_field')] : '',
																'price' => $this->config->get('moneymaker2_header_search_ajax_price') ? (($this->config->get('config_customer_price') && $this->customer->isLogged())||!$this->config->get('config_customer_price')) ? $this->currency->format($this->tax->calculate($values['discount'] ? $values['discount'] : $values['price'], $values['tax_class_id'], $this->config->get('config_tax'))) : '' : '',
																'special' => $this->config->get('moneymaker2_header_search_ajax_price') ? (float)$values['special'] ? $this->currency->format($this->tax->calculate($values['special'], $values['tax_class_id'], $this->config->get('config_tax'))) : '' : '',
																'image' => $this->config->get('moneymaker2_header_search_ajax_image') ? is_file(DIR_IMAGE . $values['image']) ? $this->model_tool_image->resize($values['image'], $this->config->get('moneymaker2_header_search_ajax_image_width'), $this->config->get('moneymaker2_header_search_ajax_image_height')) : $this->model_tool_image->resize('no_image.png', $this->config->get('moneymaker2_header_search_ajax_image_width'), $this->config->get('moneymaker2_header_search_ajax_image_height')) : '',
																'href' => html_entity_decode($this->url->link($basehref . $values['product_id']))
														);
												}
												if (count($data)==9) $data[8] = $this->language->get('text_all');
										}
								}
						}
						echo json_encode( $data );
				}
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['text_search'] = $this->language->get('text_search');]]></search>
						<add position="after"><![CDATA[
				/*mmr*/
				$data['button_search'] = $this->language->get('button_search');
				$data['moneymaker2_header_strip_search'] = $this->config->get('moneymaker2_header_strip_search');
				$data['moneymaker2_header_strip_search'] = isset($data['moneymaker2_header_strip_search']) ? $data['moneymaker2_header_strip_search'] : 1;
				switch ($data['moneymaker2_header_strip_search']) {
					case 1: $data['moneymaker2_header_strip_search_class'] = "hidden-lg hidden-md hidden-sm"; break;
					case 2: $data['moneymaker2_header_strip_search_class'] = "hidden-lg hidden-md hidden-sm visible-xlg"; break;
					case 3: $data['moneymaker2_header_strip_search_class'] = "hidden-md hidden-sm"; break;
					case 4: $data['moneymaker2_header_strip_search_class'] = "hidden-sm"; break;
					case 5: $data['moneymaker2_header_strip_search_class'] = ""; break;
				}
				/*mmr*/
				]]></add>
				</operation>
		</file>

		<file path="catalog/controller/product/special.php">
				<operation>
						<search><![CDATA[$data['button_grid'] = $this->language->get('button_grid');]]></search>
						<add position="after"><![CDATA[
				/*mmr*/
				$this->load->model('catalog/information');
				$this->load->language('product/product');
				$this->load->language('module/moneymaker2');
				$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
				$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
				if ($data['moneymaker2_modules_quickorder_enabled']) {
						$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
						$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
						$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				}

				$data['moneymaker2_catalog_categories_images_hide'] = $this->config->get('moneymaker2_catalog_categories_images_hide');
				$data['moneymaker2_catalog_categories_move_description'] = $this->config->get('moneymaker2_catalog_categories_move_description');
				$data['moneymaker2_common_categories_icons_enabled'] = $this->config->get('moneymaker2_common_categories_icons_enabled');
				$data['moneymaker2_common_categories_icons'] = $this->config->get('moneymaker2_common_categories_icons');
				$data['moneymaker2_catalog_default_view'] = $this->config->get('moneymaker2_catalog_layout_default');
				$data['moneymaker2_catalog_layout_switcher_hide'] = $this->config->get('moneymaker2_catalog_layout_switcher_hide');

				$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
				$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
				$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
				$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
				$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
				$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
				$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
				$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
				$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
				/*mmr*/
				]]></add>
				</operation>
				<operation>
						<search><![CDATA[$data['products'][] = array(]]></search>
						<add position="replace"><![CDATA[
				/*mmr*/
				$moneymaker2_stickers = array();
				if ($special) {
						if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
								$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
								$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
								$moneymaker2_stickers[] = array(
										'type' => 'special',
										'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
										'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
								);
						}
				}
				if ($result['viewed']) {
						if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
								if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
										$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'popular',
												'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
													'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['rating']) {
						if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
								if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
										$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'rated',
												'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
												'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				if ($result['date_available']) {
						if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
								if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
										$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
										$moneymaker2_stickers[] = array(
												'type' => 'new',
												'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
												'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
										);
								}
						}
				}
				$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
				if (!empty($moneymaker2_modules_stickers_customs)){
					foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
						if (isset($result[$value['field']])&&$result[$value['field']]) {
							$moneymaker2_modules_stickers_custom_caption = $value['caption'];
							$moneymaker2_stickers[] = array(
								'type' => 'custom'.$key,
								'icon' => $value['icon'],
								'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
							);
						}
					}
				}

						if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
						if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&(!$this->config->get('moneymaker2_catalog_products_list_code_hide')||!$this->config->get('moneymaker2_catalog_products_grid_code_hide'))) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}

						$moneymaker2_addtocart_tooltip = '';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								 if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
								 $moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
						} else if (!$data['moneymaker2_common_price_detached']) {
								 $moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
						}
						if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }

						$moneymaker2_addtocart_class = 'btn ';
						if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
								$moneymaker2_addtocart_class .= 'disabled ';
						}
						if (!$special) {
								$moneymaker2_addtocart_class .= 'btn-primary';
						} else {
								$moneymaker2_addtocart_class .= 'btn-danger';
						}

						if ($data['moneymaker2_modules_quickorder_enabled']) {
								$moneymaker2_quickorder_tooltip = '';
								if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
										$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
										$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
								} else {
										$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
								}
								$moneymaker2_quickorder_class = 'btn btn-default';
								if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
										$moneymaker2_quickorder_class .= ' disabled';
								}
						}

						$data['products'][] = array(
								'stickers'              => $moneymaker2_stickers,
								'stock'                 => $moneymaker2_stock,
								'code'                  => $moneymaker2_code,
								'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
								'quantity'              => $result['quantity'],
								'sort_order'            => $result['sort_order'],
								'review_count'          => $result['reviews'],
								'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
								'addtocart_class'       => $moneymaker2_addtocart_class,
								'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
								'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
				/*mmr*/
				]]></add>
				</operation>
		</file>
</modification>