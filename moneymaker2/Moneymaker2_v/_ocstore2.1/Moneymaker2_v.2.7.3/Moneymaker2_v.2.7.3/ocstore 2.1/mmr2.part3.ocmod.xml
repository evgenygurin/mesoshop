<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>Moneymaker2 Mods 3 (cart, compare, contact, product)</name>
	<version>2.7.3</version>
	<author>RGB</author>
	<code>moneymaker2part3</code>
	<link>https://2.mnmkr.com</link>
	<file path="catalog/controller/common/cart.php">
	<operation>
		<search><![CDATA[$data['products'] = array();]]></search>
		<add position="before"><![CDATA[
		/*mmr*/
		$data['text_items_count'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
		$data['text_items'] = $this->currency->format($total);
		$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
		if ($data['moneymaker2_modules_quickorder_enabled']) {
			$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
			$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
			$data['moneymaker2_modules_quickorder_display_popupcart'] = $this->config->get('moneymaker2_modules_quickorder_display_popupcart');
		}
		$data['moneymaker2_header_cart_custom'] = $this->config->get('moneymaker2_header_cart_custom');
		if ($data['moneymaker2_header_cart_custom']&&$this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0)<1) {
			$data['moneymaker2_header_cart_caption'] = $this->config->get('moneymaker2_header_cart_caption');
			$data['text_items'] = isset($data['moneymaker2_header_cart_caption'][$this->config->get('config_language_id')]) ? "<span class='cart-effect'>".$data['moneymaker2_header_cart_caption'][$this->config->get('config_language_id')]."</span>" : '';
			$data['moneymaker2_header_cart_text'] = $this->config->get('moneymaker2_header_cart_text');
			$data['moneymaker2_header_cart_text'] = isset($data['moneymaker2_header_cart_text'][$this->config->get('config_language_id')]) ? html_entity_decode($data['moneymaker2_header_cart_text'][$this->config->get('config_language_id')], ENT_QUOTES, 'UTF-8') : null;
			$data['moneymaker2_header_cart_image'] = $this->config->get('moneymaker2_header_cart_image');
			if ($data['moneymaker2_header_cart_image']) {
				$moneymaker2_header_cart_image = is_file(DIR_IMAGE . $this->config->get('moneymaker2_header_cart_image_src')) ? $this->model_tool_image->resize($this->config->get('moneymaker2_header_cart_image_src'), 210, 210) : $this->model_tool_image->resize('no_image.png', 210, 210);
				$data['moneymaker2_header_cart_image'] = $moneymaker2_header_cart_image;
			}
			$data['moneymaker2_header_cart_link_enabled'] = $this->config->get('moneymaker2_header_cart_link_enabled');
			$data['moneymaker2_header_cart_link'] = $this->config->get('moneymaker2_header_cart_link');
			if ($data['moneymaker2_header_cart_link_enabled']&&$data['moneymaker2_header_cart_link']) {
				$data['moneymaker2_header_cart_link_icon'] = $this->config->get('moneymaker2_header_cart_link_icon');
				$data['moneymaker2_header_cart_link_title'] = $this->config->get('moneymaker2_header_cart_link_title');
				$data['moneymaker2_header_cart_link_title'] = isset($data['moneymaker2_header_cart_link_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_header_cart_link_title'][$this->config->get('config_language_id')] : '';
				$data['moneymaker2_header_cart_link'] = $this->url->link('information/information', 'information_id=' . $this->config->get('moneymaker2_header_cart_link'));
			}
		};
		/*mmr*/
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[$data['checkout'] = $this->url->link('checkout/checkout', '', 'SSL');]]></search>
		<add position="after"><![CDATA[
		/*mmr*/
		$data['moneymaker2_header_strip_cart'] = $this->config->get('moneymaker2_header_strip_cart');
		$data['moneymaker2_header_strip_cart'] = isset($data['moneymaker2_header_strip_cart']) ? $data['moneymaker2_header_strip_cart'] : 1;
		switch ($data['moneymaker2_header_strip_cart']) {
			case 1: $data['moneymaker2_header_strip_cart_class'] = "hidden-lg hidden-md hidden-sm"; break;
			case 2: $data['moneymaker2_header_strip_cart_class'] = "hidden-lg hidden-md hidden-sm visible-xlg"; break;
			case 3: $data['moneymaker2_header_strip_cart_class'] = "hidden-md hidden-sm"; break;
			case 4: $data['moneymaker2_header_strip_cart_class'] = "hidden-sm"; break;
			case 5: $data['moneymaker2_header_strip_cart_class'] = ""; break;
		}
		/*mmr*/
		]]></add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/cart.php">
		<operation>
			<search><![CDATA[$data['button_checkout'] = $this->language->get('button_checkout');]]></search>
			<add position="after"><![CDATA[
		/*mmr*/
		$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
		if ($data['moneymaker2_modules_quickorder_enabled']) {
			$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
			$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
			$data['moneymaker2_modules_quickorder_display_checkoutcart'] = $this->config->get('moneymaker2_modules_quickorder_display_checkoutcart');
		}
		/*mmr*/
		]]></add>
		</operation>
		<operation>
			<search><![CDATA[($this->session->data['vouchers']) : 0), $this->currency->format($total));]]></search>
			<add position="after"><![CDATA[
		/*mmr*/
		$json['moneymaker2_total_count'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
		$json['moneymaker2_total_sum'] = $this->currency->format($total);
		/*mmr*/
		]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/compare.php">
		<operation>
			<search><![CDATA[$data['button_remove'] = $this->language->get('button_remove');]]></search>
			<add position="after"><![CDATA[
		/*mmr*/
		if ($this->config->get('moneymaker2_catalog_compare_charts_enabled')) {
			$this->document->addScript('catalog/view/javascript/jquery/moneymaker2/chart.min.js');
		}
		$data['button_back'] = $this->language->get('button_back');
		$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
		$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
		$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
		$data['moneymaker2_catalog_compare_images_hide'] = $this->config->get('moneymaker2_catalog_compare_images_hide');
		$data['moneymaker2_catalog_compare_model_hide'] = $this->config->get('moneymaker2_catalog_compare_model_hide');
		$data['moneymaker2_catalog_compare_brand_hide'] = $this->config->get('moneymaker2_catalog_compare_brand_hide');
		$data['moneymaker2_catalog_compare_availability_hide'] = $this->config->get('moneymaker2_catalog_compare_availability_hide');
		$data['moneymaker2_catalog_compare_rating_hide'] = $this->config->get('moneymaker2_catalog_compare_rating_hide');
		$data['moneymaker2_catalog_compare_description_hide'] = $this->config->get('moneymaker2_catalog_compare_description_hide');
		$data['moneymaker2_catalog_compare_weight_hide'] = $this->config->get('moneymaker2_catalog_compare_weight_hide');
		$data['moneymaker2_catalog_compare_dimensions_hide'] = $this->config->get('moneymaker2_catalog_compare_dimensions_hide');
		$moneymaker2_catalog_compare_empty_charts = array();
		/*mmr*/
		]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['products'][$product_id] = array(]]></search>
			<add position="replace"><![CDATA[
				/*mmr*/
				$data['moneymaker2_catalog_compare_charts_enabled'] = $this->config->get('moneymaker2_catalog_compare_charts_enabled');
				if ($data['moneymaker2_catalog_compare_charts_enabled']) {
					$data['moneymaker2_catalog_compare_charts_columns'] = $this->config->get('moneymaker2_catalog_compare_charts_columns');
					$moneymaker2_catalog_compare_charts = $this->config->get('moneymaker2_catalog_compare_charts');
					if ($this->config->get('moneymaker2_catalog_compare_charts_price_enabled')) {
						$data['moneymaker2_compare_dataset']['price']['title'] = $data['text_price'];
						$data['moneymaker2_compare_dataset']['price']['unit'] = $this->currency->getSymbolLeft($this->session->data['currency']) ? $this->currency->getSymbolLeft($this->session->data['currency']) : $this->currency->getSymbolRight($this->session->data['currency']);
						$data['moneymaker2_compare_dataset']['price']['values'][] = trim(preg_replace('/[^0-9.]/', '', $special ? $special : $price), '.');
						$data['moneymaker2_compare_dataset']['price']['mode'] = 'Bar';
						$data['moneymaker2_compare_dataset']['price']['fns'] = 1;
					}
					$moneymaker2_product_attributes_ids = array();
					foreach ($attribute_data as $key => $value) {
						$moneymaker2_product_attributes_ids[] = $key;
					}
					if ($moneymaker2_catalog_compare_charts) {
						if ($this->config->get('moneymaker2_catalog_compare_charts_decimal_delimiter')) { $moneymaker2_catalog_compare_charts_decimal_delimiter = ","; } else $moneymaker2_catalog_compare_charts_decimal_delimiter = ".";
						foreach ($moneymaker2_catalog_compare_charts as $moneymaker2_catalog_compare_chart) {
							/* if !emty attr */
							if (!isset($moneymaker2_compare_error) || !$moneymaker2_compare_error) {
								if (in_array($moneymaker2_catalog_compare_chart['attribute'], $moneymaker2_product_attributes_ids)) $moneymaker2_compare_error = (!isset($moneymaker2_compare_error) || !$moneymaker2_compare_error) ? false : true; else $moneymaker2_compare_error = true;
								if ($moneymaker2_compare_error) { $moneymaker2_compare_error = false; $moneymaker2_catalog_compare_empty_charts[] = $moneymaker2_catalog_compare_chart['attribute']; }
							}
							if (!$moneymaker2_compare_error) {
								foreach ($attribute_data as $key => $value) {
									if (($key == $moneymaker2_catalog_compare_chart['attribute'])&&(!in_array($key,$moneymaker2_catalog_compare_empty_charts))) {
										/* if !empty value */
										if (!$moneymaker2_compare_error) {
											if ($value && !empty($value)) {
												$moneymaker2_compare_error = (!isset($moneymaker2_compare_error) || !$moneymaker2_compare_error) ? false : true;
											} else $moneymaker2_compare_error = true;
										}
										/* if !numeric */
										if (!$moneymaker2_compare_error) {
											if (is_numeric(trim(preg_replace('/[^0-9.]/', '', $value), '.'))) $moneymaker2_compare_error = (!isset($moneymaker2_compare_error) || !$moneymaker2_compare_error) ? false : true; else $moneymaker2_compare_error = true;
										}
										/* if !explodable */
										if ($moneymaker2_catalog_compare_chart['fns'] > 1 && !$moneymaker2_compare_error) {
											if ($moneymaker2_catalog_compare_chart['delimiter'] && ((count(explode($moneymaker2_catalog_compare_chart['delimiter'], $value))) == $moneymaker2_catalog_compare_chart['fns'])) $moneymaker2_compare_error = (!isset($moneymaker2_compare_error) || !$moneymaker2_compare_error) ? false : true; else $moneymaker2_compare_error = true;
										}
										if (!$moneymaker2_compare_error) {
											foreach ($attribute_groups as $attribute_group) {
												foreach ($attribute_group['attribute'] as $attribute) {
													if ($attribute['attribute_id'] == $key) {
														$data['moneymaker2_compare_dataset'][$key]['title'] = $attribute['name'];
														$data['moneymaker2_compare_dataset'][$key]['unit'] = isset($moneymaker2_catalog_compare_chart['unit'][$this->config->get('config_language_id')]) ? $moneymaker2_catalog_compare_chart['unit'][$this->config->get('config_language_id')] : null;
													}
												}
											}
											if ($moneymaker2_catalog_compare_chart['fns'] > 1) {
												$data['moneymaker2_compare_dataset'][$key]['values'][] = explode($moneymaker2_catalog_compare_chart['delimiter'], $value);
												foreach ($data['moneymaker2_compare_dataset'][$key]['values'] as $key2 => $value2) {
													foreach ($value2 as $key3 => $value3) {
														$data['moneymaker2_compare_dataset'][$key]['values'][$key2][$key3] = trim(preg_replace('/[^0-9' . $moneymaker2_catalog_compare_charts_decimal_delimiter . ']/', '', $value3), '.');
													}
												}
											} else $data['moneymaker2_compare_dataset'][$key]['values'][] = trim(preg_replace('/[^0-9' . $moneymaker2_catalog_compare_charts_decimal_delimiter . ']/', '', $value), '.');
											$data['moneymaker2_compare_dataset'][$key]['mode'] = $moneymaker2_catalog_compare_chart['mode'] ? 'Bar' : 'Line';
											$data['moneymaker2_compare_dataset'][$key]['fns'] = $moneymaker2_catalog_compare_chart['fns'];
										}
									}
								}
							}
						}
						foreach ($moneymaker2_catalog_compare_empty_charts as $value) {
							unset($data['moneymaker2_compare_dataset'][$value]);
						}
						if (!isset($data['moneymaker2_compare_dataset'])) $moneymaker2_compare_error = true;
					}
					if (isset($moneymaker2_compare_error)&&$moneymaker2_compare_error) $data['moneymaker2_compare_dataset'] = false;
					$data['moneymaker2_compare_datasetcolors'] = array('151,187,205', '156,216,182', '205,208,236', '199,221,232', '210,210,210');
				}
				if ($this->config->get('moneymaker2_catalog_compare_charts_code')&&$this->config->get('moneymaker2_catalog_compare_charts_code_field')&&isset($product_info[$this->config->get('moneymaker2_catalog_compare_charts_code_field')])&&$product_info[$this->config->get('moneymaker2_catalog_compare_charts_code_field')]) {
					$moneymaker2_catalog_compare_charts_code_caption = $this->config->get('moneymaker2_catalog_compare_charts_code_caption');
					$moneymaker2_code = (isset($moneymaker2_catalog_compare_charts_code_caption[$this->config->get('config_language_id')]) ? $moneymaker2_catalog_compare_charts_code_caption[$this->config->get('config_language_id')] : null).$product_info[$this->config->get('moneymaker2_catalog_compare_charts_code_field')];
				} else {
					$moneymaker2_code = '';
				}
		$data['products'][$product_id] = array(
			'product_id'    => $product_info['product_id'],
			'code'          => $moneymaker2_code,
			'quantity'      => $product_info['quantity'],
			/*mmr*/
		]]></add>
		</operation>
	</file>
	<file path="catalog/controller/information/contact.php">
		<operation>
			<search><![CDATA[$data['comment'] = $this->config->get('config_comment');]]></search>
			<add position="after"><![CDATA[
		/*mmr*/
		$data['moneymaker2_catalog_contacts_map'] = $this->config->get('moneymaker2_catalog_contacts_map');
		if ($data['moneymaker2_catalog_contacts_map']) {
			$this->document->addScript('https://maps.googleapis.com/maps/api/js' . ($this->config->get('moneymaker2_catalog_contacts_map_key') ? '?key='.$this->config->get('moneymaker2_catalog_contacts_map_key') : ''));
		}
		$data['config_email'] = $this->config->get('config_email');
		$data['moneymaker2_catalog_contacts_quicklinks'] = $this->config->get('moneymaker2_catalog_contacts_quicklinks');
		$data['moneymaker2_catalog_contacts_call_title'] = $this->config->get('moneymaker2_catalog_contacts_call_title');
		$data['moneymaker2_catalog_contacts_call_title'] = isset($data['moneymaker2_catalog_contacts_call_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_catalog_contacts_call_title'][$this->config->get('config_language_id')] : null;
		$data['moneymaker2_catalog_contacts_mail_title'] = $this->config->get('moneymaker2_catalog_contacts_mail_title');
		$data['moneymaker2_catalog_contacts_mail_title'] = isset($data['moneymaker2_catalog_contacts_mail_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_catalog_contacts_mail_title'][$this->config->get('config_language_id')] : null;
		$data['moneymaker2_catalog_contacts_link'] = $this->config->get('moneymaker2_catalog_contacts_link');
		if ($data['moneymaker2_catalog_contacts_link']) {
			$data['moneymaker2_catalog_contacts_link_title'] = $this->config->get('moneymaker2_catalog_contacts_link_title');
			$data['moneymaker2_catalog_contacts_link_title'] = isset($data['moneymaker2_catalog_contacts_link_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_catalog_contacts_link_title'][$this->config->get('config_language_id')] : null;
		}
		$data['moneymaker2_catalog_contacts_multilink'] = $this->config->get('moneymaker2_catalog_contacts_multilink');
		$data['moneymaker2_catalog_contacts_multilink'] = isset($data['moneymaker2_catalog_contacts_multilink'][$this->config->get('config_language_id')]) ? $data['moneymaker2_catalog_contacts_multilink'][$this->config->get('config_language_id')] : null;
		$data['moneymaker2_catalog_contacts_map_custom'] = $this->config->get('moneymaker2_catalog_contacts_map_custom');
		$data['moneymaker2_catalog_contacts_map_custom_code'] = html_entity_decode($this->config->get('moneymaker2_catalog_contacts_map_custom_code'), ENT_QUOTES, 'UTF-8');
		if ($this->config->get('moneymaker2_common_agree_warning')) {
			$this->load->language('affiliate/register');
			$this->load->model('catalog/information');
			$information_info = $this->model_catalog_information->getInformation($this->config->get('moneymaker2_common_agree_warning'));
			if ($information_info) {
				$data['text_agree'] = sprintf($this->language->get('text_agree'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('moneymaker2_common_agree_warning'), 'SSL'), $information_info['title'], $information_info['title']);
			} else {
				$data['text_agree'] = '';
			}
		} else {
			$data['text_agree'] = '';
		}
		if (isset($this->session->data['agree'])) {
			$data['agree'] = $this->session->data['agree'];
		} else {
			$data['agree'] = '';
		}
		if (isset($this->error['agree'])) {
			$data['error_agree'] = $this->error['agree'];
		} else {
			$data['error_agree'] = '';
		}
		/*mmr*/
		]]></add>
		</operation>
		<operation>
			<search><![CDATA[protected function validate() {]]></search>
			<add position="after"><![CDATA[
		/*mmr*/
		if ($this->config->get('moneymaker2_common_agree_warning')) {
			$this->load->model('catalog/information');
			$this->load->language('affiliate/register');
			$this->load->language('information/contact');
			$information_info = $this->model_catalog_information->getInformation($this->config->get('moneymaker2_common_agree_warning'));
			if ($information_info && !isset($this->request->post['agree'])) {
				$this->error['agree'] = sprintf($this->language->get('error_agree'), $information_info['title']);
			}
		}
		/*mmr*/
		]]></add>
	</operation>
	</file>
	<file path="catalog/controller/product/product.php">
	<operation>
		<search><![CDATA[$data['text_select'] = $this->language->get('text_select');]]></search>
		<add position="before"><![CDATA[
		/*mmr*/
		$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
		$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.moneymaker2.css');
		$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
		$this->document->addScript('catalog/view/javascript/jquery/moneymaker2/bootstrap.rating.input.min.js');
		/*mmr*/
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[$data['rating'] = (int)$product_info['rating'];]]></search>
		<add position="after"><![CDATA[
		/*mmr*/
		$data['quantity'] = $product_info['quantity'];
		$this->load->language('module/moneymaker2');
		$data['text_downloads'] = $this->language->get('text_downloads');
		$data['moneymaker2_currency'] = $this->currency->getCode();
		$data['moneymaker2_text_old_price'] = $this->language->get('text_old_price');
		if ($this->config->get('moneymaker2_common_preorder')&&$this->config->get('moneymaker2_common_preorder_field')==$product_info['stock_status_id']&&$product_info['quantity'] <= 0) {
			$data['moneymaker2_common_preorder'] = true;
		} else {
			$data['moneymaker2_common_preorder'] = false;
		}
		$data['moneymaker2_modules_quickorder_enabled'] = $this->config->get('moneymaker2_modules_quickorder_enabled');
		if ($data['moneymaker2_modules_quickorder_enabled']) {
			if ($product_info['image']) {
				$data['quickorder_thumb'] = $this->model_tool_image->resize($product_info['image'], $this->config->get('moneymaker2_modules_quickorder_image_width'), $this->config->get('moneymaker2_modules_quickorder_image_height'));
			} else {
				$data['quickorder_thumb'] = '';
			}
			$data['moneymaker2_modules_quickorder_display_thumb'] = $this->config->get('moneymaker2_modules_quickorder_display_thumb');
			$data['moneymaker2_modules_quickorder_display_catalog'] = $this->config->get('moneymaker2_modules_quickorder_display_catalog');
			if ($data['moneymaker2_common_preorder']) {
				$data['moneymaker2_modules_quickorder_button_title'] = $this->language->get('text_preorder');
				$data['moneymaker2_modules_quickorder_button_tooltip'] = $this->language->get('text_preorder_help');
			} else {
				$data['moneymaker2_modules_quickorder_button_title'] = $this->config->get('moneymaker2_modules_quickorder_button_title');
				$data['moneymaker2_modules_quickorder_button_title'] = isset($data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_title'][$this->config->get('config_language_id')] : null;
				$data['moneymaker2_modules_quickorder_button_tooltip'] = $this->config->get('moneymaker2_modules_quickorder_button_tooltip');
				$data['moneymaker2_modules_quickorder_button_tooltip'] = isset($data['moneymaker2_modules_quickorder_button_tooltip'][$this->config->get('config_language_id')]) ? $data['moneymaker2_modules_quickorder_button_tooltip'][$this->config->get('config_language_id')] : null;
			}
		}
		$data['moneymaker2_product_socials_addthis_enabled'] = $this->config->get('moneymaker2_product_socials_addthis_enabled');
		$data['moneymaker2_product_socials_yandex_enabled'] = $this->config->get('moneymaker2_product_socials_yandex_enabled');
		if ($this->config->get('moneymaker2_product_code')&&$this->config->get('moneymaker2_catalog_products_code_field')&&isset($product_info[$this->config->get('moneymaker2_catalog_products_code_field')])&&$product_info[$this->config->get('moneymaker2_catalog_products_code_field')]) {
			$moneymaker2_product_code_caption = $this->config->get('moneymaker2_product_code_caption');
			$data['moneymaker2_code'] = (isset($moneymaker2_product_code_caption[$this->config->get('config_language_id')]) ? $moneymaker2_product_code_caption[$this->config->get('config_language_id')] : null).$product_info[$this->config->get('moneymaker2_catalog_products_code_field')];
		} else {
			$data['moneymaker2_code'] = '';
		}
		if ($this->config->get('moneymaker2_product_attributes_code')&&$this->config->get('moneymaker2_catalog_products_code_field')&&isset($product_info[$this->config->get('moneymaker2_catalog_products_code_field')])&&$product_info[$this->config->get('moneymaker2_catalog_products_code_field')]) {
			$moneymaker2_product_code_caption = $this->config->get('moneymaker2_product_code_caption');
			$data['moneymaker2_product_code_caption'] = isset($moneymaker2_product_code_caption[$this->config->get('config_language_id')]) ? $moneymaker2_product_code_caption[$this->config->get('config_language_id')] : null;
			$data['moneymaker2_attributes_code'] = $product_info[$this->config->get('moneymaker2_catalog_products_code_field')];
		} else {
			$data['moneymaker2_attributes_code'] = '';
		}
		$data['moneymaker2_mpn'] = isset($product_info['mpn']) ? $product_info['mpn'] : null;
		$data['moneymaker2_common_buy_hide'] = $this->config->get('moneymaker2_common_buy_hide');
		$data['moneymaker2_common_wishlist_hide'] = $this->config->get('moneymaker2_common_wishlist_hide');
		$data['moneymaker2_common_wishlist_caption'] = $this->config->get('moneymaker2_common_wishlist_caption');
		$data['moneymaker2_common_compare_hide'] = $this->config->get('moneymaker2_common_compare_hide');
		$data['moneymaker2_common_compare_caption'] = $this->config->get('moneymaker2_common_compare_caption');
		$data['moneymaker2_common_cart_outofstock_disabled'] = $this->config->get('moneymaker2_common_cart_outofstock_disabled');
		$data['moneymaker2_common_price_detached'] = $this->config->get('moneymaker2_common_price_detached');
		if ($this->config->get('moneymaker2_product_gallery_animation')) $this->document->addStyle('catalog/view/theme/moneymaker2/stylesheet/mfp.effects.css');
		$data['moneymaker2_product_gallery_moved'] = $this->config->get('moneymaker2_product_gallery_moved');
		$data['moneymaker2_product_gallery_round'] = $this->config->get('moneymaker2_product_gallery_round');
		$data['moneymaker2_product_gallery_animation'] = $this->config->get('moneymaker2_product_gallery_animation');
		$data['moneymaker2_product_gallery_animation_in'] = $this->config->get('moneymaker2_product_gallery_animation_in');
		$data['moneymaker2_product_thumbs_limit'] = $this->config->get('moneymaker2_product_thumbs_limit');
		$data['moneymaker2_product_points_size'] = $this->config->get('moneymaker2_product_points_size');
		if ($this->config->get('moneymaker2_product_points_stock')&&$product_info['quantity'] <= 0) {
			$data['moneymaker2_product_points_stock_id'] = $product_info['stock_status_id'];
			$data['moneymaker2_product_points_stock'] = $this->config->get('moneymaker2_product_points_stock');
			$data['moneymaker2_product_points_stock_icon'] = $this->config->get('moneymaker2_product_points_stock_icon');
			$data['moneymaker2_product_points_stock_icon'] = $data['moneymaker2_product_points_stock_icon'][$product_info['stock_status_id']];
			$data['moneymaker2_product_points_stock_caption'] = $this->config->get('moneymaker2_product_points_stock_caption');
			$data['moneymaker2_product_points_stock_caption'] = isset($data['moneymaker2_product_points_stock_caption'][$product_info['stock_status_id']][$this->config->get('config_language_id')]) ? html_entity_decode($data['moneymaker2_product_points_stock_caption'][$product_info['stock_status_id']][$this->config->get('config_language_id')], ENT_QUOTES, 'UTF-8') : null;
		} else if ($this->config->get('moneymaker2_product_points_stock')&&$this->config->get('moneymaker2_product_points_stock_default')) {
			$data['moneymaker2_product_points_stock_id'] = $this->config->get('moneymaker2_product_points_stock_default');
			$data['moneymaker2_product_points_stock'] = $this->config->get('moneymaker2_product_points_stock');
			$data['moneymaker2_product_points_stock_icon'] = $this->config->get('moneymaker2_product_points_stock_icon');
			$data['moneymaker2_product_points_stock_icon'] = $data['moneymaker2_product_points_stock_icon'][$this->config->get('moneymaker2_product_points_stock_default')];
			$data['moneymaker2_product_points_stock_caption'] = $this->config->get('moneymaker2_product_points_stock_caption');
			$data['moneymaker2_product_points_stock_caption'] = isset($data['moneymaker2_product_points_stock_caption'][$this->config->get('moneymaker2_product_points_stock_default')][$this->config->get('config_language_id')]) ? html_entity_decode($data['moneymaker2_product_points_stock_caption'][$this->config->get('moneymaker2_product_points_stock_default')][$this->config->get('config_language_id')], ENT_QUOTES, 'UTF-8') : null;
		} else {
			$data['moneymaker2_product_points_stock'] = '';
		}
		$data['moneymaker2_product_points_manufacturer'] = $this->config->get('moneymaker2_product_points_manufacturer');
		if ($data['moneymaker2_product_points_manufacturer']) {
			$data['moneymaker2_manufacturer_image'] = $product_info['manufacturer_image'] ? $this->model_tool_image->resize($product_info['manufacturer_image'], $this->config->get('moneymaker2_product_points_manufacturer_image_width'), $this->config->get('moneymaker2_product_points_manufacturer_image_height')) : $this->model_tool_image->resize('no_image.png', $this->config->get('moneymaker2_product_points_manufacturer_image_width'), $this->config->get('moneymaker2_product_points_manufacturer_image_height'));
			$data['moneymaker2_product_points_manufacturer_caption'] = $this->config->get('moneymaker2_product_points_manufacturer_caption');
			$data['moneymaker2_product_points_manufacturer_caption'] = isset($data['moneymaker2_product_points_manufacturer_caption'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_points_manufacturer_caption'][$this->config->get('config_language_id')] : null;
		}
		$data['moneymaker2_product_points'] = array();
		$moneymaker2_product_points = $this->config->get('moneymaker2_product_points');
		if (!empty($moneymaker2_product_points)) {
			$moneymaker2_product_category = $this->model_catalog_product->getCategories($product_info['product_id']);
			if (isset($moneymaker2_product_category)) {
				$moneymaker2_product_category_ids = array();
				foreach ($moneymaker2_product_category as $key => $value) {
					$moneymaker2_product_category_ids[] =  $value['category_id'];
				}
			}
			$used_keys = array();
			if ($moneymaker2_product_category_ids) {
				foreach ($moneymaker2_product_category_ids as $moneymaker2_product_category_id) {
					if ($moneymaker2_product_category_id) {
						foreach ($moneymaker2_product_points as $key => $value) {
							if (isset($value['categories'])&&in_array($moneymaker2_product_category_id, $value['categories'])&&(!in_array($key, $used_keys))) {
								$data['moneymaker2_product_points'][] = array(
									'icon'          => $value['icon'],
									'categories'    => isset($value['categories']) ? $value['categories'] : array(0),
									'name'          => isset($value['name'][$this->config->get('config_language_id')]) ? $value['name'][$this->config->get('config_language_id')] : null,
									'text'          => isset($value['text'][$this->config->get('config_language_id')]) ? html_entity_decode($value['text'][$this->config->get('config_language_id')], ENT_QUOTES, 'UTF-8') : null,
								);
								$moneymaker2_product_points_sort_order[$key] = $value['sort_order'];
								$used_keys[] = $key;
							}
						}
					}
				}
				if (isset($moneymaker2_product_points_sort_order)) {
					array_multisort($moneymaker2_product_points_sort_order, SORT_ASC, $data['moneymaker2_product_points']);
				}
			}
		}
		$data['button_reviews'] = $this->language->get('button_reviews');
		$data['button_submit'] = $this->language->get('button_submit');
		$data['button_shopping'] = $this->language->get('button_shopping');
		$data['moneymaker2_stickers_mode'] = $this->config->get('moneymaker2_modules_stickers_mode');
		$data['moneymaker2_stickers_size_product'] = $this->config->get('moneymaker2_modules_stickers_size_product');
		$moneymaker2_stickers = array();
		if ($product_info['special']) {
			if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
				$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
				$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$product_info['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($product_info['special']/$product_info['price'])*100))."%" : "-".$this->currency->format((($product_info['special'])-($product_info['price']))*(-1))) : '';
				$moneymaker2_stickers[] = array(
					'type' => 'special',
					'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
					'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
				);
			}
		}
		if ($product_info['viewed']) {
			if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
				if ($product_info['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
					$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'popular',
						'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
						'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		if ($product_info['rating']) {
			if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
				if ($product_info['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
					$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'rated',
						'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
						'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		if ($product_info['date_available']) {
			if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
				if ((round((strtotime(date("Y-m-d"))-strtotime($product_info['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
					$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'new',
						'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
						'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
		if (!empty($moneymaker2_modules_stickers_customs)){
			foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
				if (isset($product_info[$value['field']])&&$product_info[$value['field']]) {
					$moneymaker2_modules_stickers_custom_caption = $value['caption'];
					$moneymaker2_stickers[] = array(
						'type' => 'custom'.$key,
						'icon' => $value['icon'],
						'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		$data['stickers'] = $moneymaker2_stickers;
		$moneymaker2_addtocart_tooltip = '';
		if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
			if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
			$moneymaker2_addtocart_tooltip .= "<p>".$data['stock']."</p>";
		} else if (!$data['moneymaker2_common_price_detached']) {
			$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
		}
		if ($product_info['price']&&$product_info['special']) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$this->currency->format($product_info['price'])."</p>"; }
		$moneymaker2_addtocart_class = 'btn ';
		if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0) {
			$moneymaker2_addtocart_class .= 'disabled ';
		}
		if (!$product_info['special']) {
			$moneymaker2_addtocart_class .= 'btn-primary';
			$data['moneymaker2_modules_timer'] = null;
		} else {
			$moneymaker2_addtocart_class .= 'btn-danger';
			$data['moneymaker2_modules_timer'] = $this->config->get('moneymaker2_modules_timer');
			if ($data['moneymaker2_modules_timer']) {
				$data['text_timer_discount'] = $this->language->get('text_timer_discount');
				$data['text_timer_ends_numeral1'] = $this->language->get('text_timer_ends_numeral1');
				$data['text_timer_ends_numeral2'] = $this->language->get('text_timer_ends_numeral2');
				$data['text_timer_ends_numeral3'] = $this->language->get('text_timer_ends_numeral3');
				$data['text_timer_days_numeral1'] = $this->language->get('text_timer_days_numeral1');
				$data['text_timer_days_numeral2'] = $this->language->get('text_timer_days_numeral2');
				$data['text_timer_days_numeral3'] = $this->language->get('text_timer_days_numeral3');
				$data['text_timer_limit'] = $this->language->get('text_timer_limit');
				if ($this->customer->isLogged()){
					$customer_group_id = $this->customer->getGroupId();
				} else {
					$customer_group_id = (int)$this->config->get('config_customer_group_id');
				}
				$sql = "SELECT date_end FROM " . DB_PREFIX . "product_special WHERE product_id ='" . $product_id . "' AND date_start <= NOW() AND date_end >= NOW() ";
				if ($customer_group_id){ $sql .= " AND customer_group_id ='" . $customer_group_id . "'"; }
				$sql .= " ORDER BY priority LIMIT 0,1";
				$query = $this->db->query($sql);
				if ($query->num_rows){ $date_end = $query->row['date_end']; } else { $date_end = 0; }
				if ($date_end){
					$moneymaker2_modules_timer_date = date_create($date_end);
					$data['moneymaker2_modules_timer_date'] = date_format($moneymaker2_modules_timer_date, 'Y/m/d');
				} else {
					$data['moneymaker2_modules_timer_date'] = $date_end;
				};
				$data['moneymaker2_modules_timer_discount'] = ($this->config->get('moneymaker2_modules_timer_discount')&&$product_info['price']>0) ? ($this->config->get('moneymaker2_modules_timer_discount_mode') ? round(100-(($product_info['special']/$product_info['price'])*100))."%" : $this->currency->format((($product_info['special'])-($product_info['price']))*(-1), $this->session->data['currency'])) : null;
			}
		}
		if ($data['moneymaker2_modules_quickorder_enabled']) {
			$moneymaker2_quickorder_tooltip = '';
			$moneymaker2_quickorder_class = 'btn btn-link';
			if ($data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0&&!$data['moneymaker2_common_preorder']) {
				$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_tooltip'] . "</p>";
				$moneymaker2_quickorder_tooltip .= "<p>" . $data['stock'] . "</p>";
				$moneymaker2_quickorder_class .= ' disabled';
			} else {
				$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_tooltip'] . "</p>";
			}
		}
		$data['product_sold'] = $data['moneymaker2_common_cart_outofstock_disabled']&&$product_info['quantity'] <= 0 ? true : false;
		$data['addtocart_tooltip'] = $moneymaker2_addtocart_tooltip;
		$data['addtocart_class'] = $moneymaker2_addtocart_class;
		$data['quickorder_tooltip'] = $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '';
		$data['quickorder_class'] = $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '';
		$data['moneymaker2_product_price'] = $data['price'];
		$data['moneymaker2_product_special'] = $data['special'];
		$data['moneymaker2_product_options_hide'] = $this->config->get('moneymaker2_product_options_hide');
		$data['moneymaker2_product_options_hide_limit'] = $this->config->get('moneymaker2_product_options_hide_limit');
		$data['moneymaker2_product_tabs_hide'] = $this->config->get('moneymaker2_product_tabs_hide');
		$data['moneymaker2_product_tabs_headers'] = $this->config->get('moneymaker2_product_tabs_headers');
		if ($data['moneymaker2_product_tabs_headers']) {
			$data['moneymaker2_product_tabs_headers_text'] = $this->config->get('moneymaker2_product_tabs_headers_text');
			if ($data['moneymaker2_product_tabs_headers']==1) {
				$data['moneymaker2_product_description_header'] = $data['tab_description']." ".$data['heading_title'];
				$data['moneymaker2_product_attribute_header'] = $data['tab_attribute']." ".$data['heading_title'];
				$data['moneymaker2_product_review_header'] = $data['button_reviews']." ".$data['heading_title'];
			} else if ($data['moneymaker2_product_tabs_headers']==2) {
				$data['moneymaker2_product_description_header'] = $data['heading_title']." ".$data['tab_description'];
				$data['moneymaker2_product_attribute_header'] = $data['heading_title']." ".$data['tab_attribute'];
				$data['moneymaker2_product_review_header'] = $data['heading_title']." ".$data['button_reviews'];
			} else if ($data['moneymaker2_product_tabs_headers']==3) {
				$data['moneymaker2_product_description_header'] = $data['tab_description']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['heading_title'];
				$data['moneymaker2_product_attribute_header'] = $data['tab_attribute']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['heading_title'];
				$data['moneymaker2_product_review_header'] = $data['button_reviews']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['heading_title'];
			} else if ($data['moneymaker2_product_tabs_headers']==4) {
				$data['moneymaker2_product_description_header'] = $data['heading_title']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['tab_description'];
				$data['moneymaker2_product_attribute_header'] = $data['heading_title']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['tab_attribute'];
				$data['moneymaker2_product_review_header'] = $data['heading_title']." ".(isset($data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')]) ? $data['moneymaker2_product_tabs_headers_text'][$this->config->get('config_language_id')] : null)." ".$data['button_reviews'];
			} else if ($data['moneymaker2_product_tabs_headers']==5) {
				$data['moneymaker2_product_description_header'] = $data['moneymaker2_product_attribute_header'] = $data['moneymaker2_product_review_header'] = $data['heading_title'];
			}
		}
		$data['moneymaker2_product_tabs_description_buttons'] = $this->config->get('moneymaker2_product_tabs_description_buttons');
		$data['moneymaker2_product_tabs_attributes_buttons'] = $this->config->get('moneymaker2_product_tabs_attributes_buttons');
		$data['moneymaker2_product_tabs_attributes_responsive'] = $this->config->get('moneymaker2_product_tabs_attributes_responsive');
		$data['weight'] = $this->config->get('moneymaker2_product_tabs_attributes_weight') && $product_info['weight'] > 0 ? $this->weight->format($product_info['weight'], $product_info['weight_class_id']) : '';
		$data['length'] = $this->config->get('moneymaker2_product_tabs_attributes_dimensions') && $product_info['length'] > 0 ? $this->length->format($product_info['length'], $product_info['length_class_id']) : '';
		$data['width'] = $this->config->get('moneymaker2_product_tabs_attributes_dimensions') && $product_info['width'] > 0 ? $this->length->format($product_info['width'], $product_info['length_class_id']) : '';
		$data['height'] = $this->config->get('moneymaker2_product_tabs_attributes_dimensions') && $product_info['height'] > 0 ? $this->length->format($product_info['height'], $product_info['length_class_id']) : '';
		if ($data['weight']||$data['length']||$data['width']||$data['height']||$data['moneymaker2_attributes_code']) {
			$this->load->language('product/compare');
			$data['text_weight'] = $this->language->get('text_weight');
			$data['text_dimension'] = $this->language->get('text_dimension');
			$data['text_product'] = $this->language->get('text_product');
		}
		$data['moneymaker2_product_tabs_reviews_indexed'] = $this->config->get('moneymaker2_product_tabs_reviews_indexed');
		if ($data['moneymaker2_product_tabs_reviews_indexed']) {
			$this->load->model('catalog/review');
			$data['text_no_reviews'] = $this->language->get('text_no_reviews');
			if (isset($this->request->get['page'])) {
				$page = $this->request->get['page'];
			} else {
				$page = 1;
			}
			$data['reviews'] = array();
			$review_total = $this->model_catalog_review->getTotalReviewsByProductId($this->request->get['product_id']);
			$results = $this->model_catalog_review->getReviewsByProductId($this->request->get['product_id'], ($page - 1) * 5, 5);
			foreach ($results as $result) {
				$data['reviews'][] = array(
					'author'     => $result['author'],
					'text'       => nl2br($result['text']),
					'rating'     => (int)$result['rating'],
					'date_added' => date('Y-m-d', strtotime($result['date_added']))
				);
			}
			$pagination = new Pagination();
			$pagination->total = $review_total;
			$pagination->page = $page;
			$pagination->limit = 5;
			$pagination->url = $this->url->link('product/product/review', 'product_id=' . $this->request->get['product_id'] . '&page={page}');
			$data['pagination'] = $pagination->render();
		}
		$data['moneymaker2_product_tabs'] = array();
		$moneymaker2_product_tabs = $this->config->get('moneymaker2_product_tabs');
		if (!empty($moneymaker2_product_tabs)){
			$this->load->model('catalog/information');
			if (isset ($this->request->get['path'])) {
				$moneymaker2_product_categories = explode('_', $this->request->get['path']);
				$moneymaker2_product_category_id = $moneymaker2_product_categories[count($moneymaker2_product_categories) - 1];
			} else {
				$moneymaker2_product_category = $this->model_catalog_product->getCategories($product_info['product_id']);
				$moneymaker2_product_category_id = isset($moneymaker2_product_category[0]['category_id']) ? $moneymaker2_product_category[0]['category_id'] : 0;
			}
			if ($moneymaker2_product_category_id){
				foreach ($moneymaker2_product_tabs as $key => $value) {
					$information_info = $this->model_catalog_information->getInformation($value['link']);
					if (isset($value['categories'])&&in_array($moneymaker2_product_category_id, $value['categories'])) {
					$data['moneymaker2_product_tabs'][] = array(
						'icon'    => isset($value['icon']) ? $value['icon'] : '',
						'categories'    => isset($value['categories']) ? $value['categories'] : array(0),
						'name'          => (isset($value['name'][$this->config->get('config_language_id')])&&$value['name'][$this->config->get('config_language_id')]) ? $value['name'][$this->config->get('config_language_id')] : (isset($information_info['title']) ? $information_info['title'] : ''),
						'link'          => $value['link'],
					);
					$moneymaker2_product_tabs_sort_order[$key] = $value['sort_order'];
					}
				}
				if (isset($moneymaker2_product_tabs_sort_order)) {
					array_multisort($moneymaker2_product_tabs_sort_order, SORT_ASC, $data['moneymaker2_product_tabs']);
				}
			}
		}
		/*mmr*/
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[$data['products'][] = array(]]></search>
		<add position="replace"><![CDATA[
		/*mmr*/
		$data['moneymaker2_product_related_carousel'] = $this->config->get('moneymaker2_product_related_carousel');
		$data['moneymaker2_product_related_carousel_autoplay'] = $this->config->get('moneymaker2_product_related_carousel_autoplay');
		$data['moneymaker2_stickers_size_catalog'] = $this->config->get('moneymaker2_modules_stickers_size_catalog');
		$moneymaker2_stickers = array();
		if ($special) {
			if ($this->config->get('moneymaker2_modules_stickers_specials_enabled')) {
				$moneymaker2_modules_stickers_specials_caption = $this->config->get('moneymaker2_modules_stickers_specials_caption');
				$moneymaker2_modules_stickers_specials_discount = ($this->config->get('moneymaker2_modules_stickers_specials_discount')&&$result['price']>0) ? ($this->config->get('moneymaker2_modules_stickers_specials_discount_mode') ? "-".round(100-(($result['special']/$result['price'])*100))."%" : "-".$this->currency->format((($result['special'])-($result['price']))*(-1))) : '';
				$moneymaker2_stickers[] = array(
					'type' => 'special',
					'icon' => $this->config->get('moneymaker2_modules_stickers_specials_icon'),
					'caption' => $this->config->get('moneymaker2_modules_stickers_specials_discount') ? "<b>".$moneymaker2_modules_stickers_specials_discount."</b> ".(isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null) : (isset($moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_specials_caption[$this->config->get('config_language_id')] : null),
				);
			}
		}
		if ($result['viewed']) {
			if ($this->config->get('moneymaker2_modules_stickers_popular_enabled')) {
				if ($result['viewed']>=$this->config->get('moneymaker2_modules_stickers_popular_limit')) {
					$moneymaker2_modules_stickers_popular_caption = $this->config->get('moneymaker2_modules_stickers_popular_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'popular',
						'icon' => $this->config->get('moneymaker2_modules_stickers_popular_icon'),
						'caption' => isset($moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_popular_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		if ($result['rating']) {
			if ($this->config->get('moneymaker2_modules_stickers_rated_enabled')) {
				if ($result['rating']>=$this->config->get('moneymaker2_modules_stickers_rated_limit')) {
					$moneymaker2_modules_stickers_rated_caption = $this->config->get('moneymaker2_modules_stickers_rated_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'rated',
						'icon' => $this->config->get('moneymaker2_modules_stickers_rated_icon'),
						'caption' => isset($moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_rated_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		if ($result['date_available']) {
			if ($this->config->get('moneymaker2_modules_stickers_new_enabled')) {
				if ((round((strtotime(date("Y-m-d"))-strtotime($result['date_available']))/86400))<=$this->config->get('moneymaker2_modules_stickers_new_limit')) {
					$moneymaker2_modules_stickers_new_caption = $this->config->get('moneymaker2_modules_stickers_new_caption');
					$moneymaker2_stickers[] = array(
						'type' => 'new',
						'icon' => $this->config->get('moneymaker2_modules_stickers_new_icon'),
						'caption' => isset($moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')]) ? $moneymaker2_modules_stickers_new_caption[$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		$moneymaker2_modules_stickers_customs = $this->config->get('moneymaker2_modules_stickers_customs');
		if (!empty($moneymaker2_modules_stickers_customs)){
			foreach ($moneymaker2_modules_stickers_customs as $key => $value) {
				if (isset($result[$value['field']])&&$result[$value['field']]) {
					$moneymaker2_modules_stickers_custom_caption = $value['caption'];
					$moneymaker2_stickers[] = array(
						'type' => 'custom'.$key,
						'icon' => $value['icon'],
						'caption' => isset($value['caption'][$this->config->get('config_language_id')]) ? $value['caption'][$this->config->get('config_language_id')] : null,
					);
				}
			}
		}
		if ($result['quantity'] <= 0) { $moneymaker2_stock = "<span class='stock'><span>" . $result['stock_status'] . "</span></span>"; } else { $moneymaker2_stock = "<span class='stock instock'><!--" . $this->language->get('text_stock') . "--> <span>" . $this->language->get('text_instock') . "</span></span>"; }
		if ($this->config->get('moneymaker2_catalog_products_code_field')&&isset($result[$this->config->get('moneymaker2_catalog_products_code_field')])&&$result[$this->config->get('moneymaker2_catalog_products_code_field')]&&$this->config->get('moneymaker2_product_related_code')) {$moneymaker2_code = "<span class='code'>".$this->language->get('text_model')." <span>".$result[$this->config->get('moneymaker2_catalog_products_code_field')]."</span></span>";} else {$moneymaker2_code = '';}
		$moneymaker2_addtocart_tooltip = '';
		if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
			if (!$data['moneymaker2_common_price_detached']) { $moneymaker2_addtocart_tooltip = "<p class='text-muted'>" . $data['button_cart'] . "</p>"; }
			$moneymaker2_addtocart_tooltip .= "<p>".$moneymaker2_stock."</p>";
		} else if (!$data['moneymaker2_common_price_detached']) {
			$moneymaker2_addtocart_tooltip .= "<p>".$data['button_cart']."</p>";
		}
		if ($price&&$special) { $moneymaker2_addtocart_tooltip .= "<p>".$data['moneymaker2_text_old_price']." ".$price."</p>"; }
		$moneymaker2_addtocart_class = 'btn ';
		if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
			$moneymaker2_addtocart_class .= 'disabled ';
		}
		if (!$special) {
			$moneymaker2_addtocart_class .= 'btn-primary';
		} else {
			$moneymaker2_addtocart_class .= 'btn-danger';
		}
		if ($data['moneymaker2_modules_quickorder_enabled']) {
			$moneymaker2_quickorder_tooltip = '';
			if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
				$moneymaker2_quickorder_tooltip .= "<p class='text-muted'>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
				$moneymaker2_quickorder_tooltip .= "<p>" . $moneymaker2_stock . "</p>";
			} else {
				$moneymaker2_quickorder_tooltip .= "<p>" . $data['moneymaker2_modules_quickorder_button_title'] . "</p>";
			}
			$moneymaker2_quickorder_class = 'btn btn-default';
			if ($data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0) {
				$moneymaker2_quickorder_class .= ' disabled';
			}
		}
		$data['products'][] = array(
			'stickers'              => $moneymaker2_stickers,
			'stock'                 => $this->config->get('moneymaker2_product_related_stock') ? $moneymaker2_stock : '',
			'code'                  => $this->config->get('moneymaker2_product_related_code') ? $moneymaker2_code : '',
			'sold'                  => $data['moneymaker2_common_cart_outofstock_disabled']&&$result['quantity'] <= 0 ? true : false,
			'quantity'              => $result['quantity'],
			'sort_order'            => $result['sort_order'],
			'addtocart_tooltip'     => $moneymaker2_addtocart_tooltip,
			'addtocart_class'       => $moneymaker2_addtocart_class,
			'quickorder_tooltip'    => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_tooltip : '',
			'quickorder_class'      => $data['moneymaker2_modules_quickorder_enabled'] ? $moneymaker2_quickorder_class : '',
		/*mmr*/
		]]></add>
	</operation>
	<operation>
		<search><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',]]></search>
		<add position="replace"><![CDATA['description' => $this->config->get('moneymaker2_product_related_description') ? utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..' : '',]]></add>
	</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
	<operation>
		<search><![CDATA['stock_status'     => $query->row['stock_status'],]]></search>
		<add position="after"><![CDATA[
		'stock_status_id'     => $query->row['stock_status_id'],
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[p.image,]]></search>
		<add position="replace"><![CDATA[p.image, m.image AS manufacturer_image,]]></add>
	</operation>
	<operation>
		<search><![CDATA['manufacturer'     => $query->row['manufacturer'],]]></search>
		<add position="after"><![CDATA['manufacturer_image'     => $query->row['manufacturer_image'],]]></add>
	</operation>
	</file>
	<file path="catalog/controller/common/language.php">
	<operation>
		<search><![CDATA[$data['languages'] = array();]]></search>
		<add position="after"><![CDATA[
		$data['moneymaker2_header_strip_language'] = $this->config->get('moneymaker2_header_strip_language');
		$data['moneymaker2_header_strip_language'] = isset($data['moneymaker2_header_strip_language']) ? $data['moneymaker2_header_strip_language'] : 1;
		if ($data['moneymaker2_header_strip_language']>1) {
			switch ($data['moneymaker2_header_strip_language']) {
				case 2: $data['moneymaker2_header_strip_language_class'] = "hidden-lg hidden-md hidden-sm"; break;
				case 3: $data['moneymaker2_header_strip_language_class'] = "hidden-lg hidden-md hidden-sm visible-xlg"; break;
				case 4: $data['moneymaker2_header_strip_language_class'] = "hidden-md hidden-sm"; break;
				case 5: $data['moneymaker2_header_strip_language_class'] = "hidden-sm"; break;
				case 6: $data['moneymaker2_header_strip_language_class'] = ""; break;
			}
		}
	]]></add>
	</operation>
	</file>
	<file path="catalog/controller/common/currency.php">
	<operation>
		<search><![CDATA[if (!isset($this->request->get['route'])) {]]></search>
		<add position="before"><![CDATA[
		$data['moneymaker2_header_strip_currency'] = $this->config->get('moneymaker2_header_strip_currency');
		$data['moneymaker2_header_strip_currency'] = isset($data['moneymaker2_header_strip_currency']) ? $data['moneymaker2_header_strip_currency'] : 1;
		if ($data['moneymaker2_header_strip_currency']>1) {
			switch ($data['moneymaker2_header_strip_currency']) {
				case 2: $data['moneymaker2_header_strip_currency_class'] = "hidden-lg hidden-md hidden-sm"; break;
				case 3: $data['moneymaker2_header_strip_currency_class'] = "hidden-lg hidden-md hidden-sm visible-xlg"; break;
				case 4: $data['moneymaker2_header_strip_currency_class'] = "hidden-md hidden-sm"; break;
				case 5: $data['moneymaker2_header_strip_currency_class'] = "hidden-sm"; break;
				case 6: $data['moneymaker2_header_strip_currency_class'] = ""; break;
			}
			$moneymaker2_header_strip_currencies = array("usd", "rub", "eur", "btc", "cny", "gbp", "ils", "inr", "jpy", "krw", "rmb", "try", "won", "yen");
			foreach ($data['currencies'] as $currency) {
				if ($currency['code'] == $data['code']) {
					if ($currency['symbol_left']) { $moneymaker2_header_strip_currency_symbol = $currency['symbol_left']; } else { $moneymaker2_header_strip_currency_symbol = $currency['symbol_right']; }
				}
			}
			if (!isset($moneymaker2_header_strip_currency_symbol)) $moneymaker2_header_strip_currency_symbol = "";
			if (in_array(strtolower($data['code']), $moneymaker2_header_strip_currencies)) {
				$data['moneymaker2_header_strip_currency_icon'] = '<i class="fa fa-fw fa-'.strtolower($data['code']).'"></i>';
			} else {
				$data['moneymaker2_header_strip_currency_icon'] = '<i class="fa fa-fw"><small>'.$moneymaker2_header_strip_currency_symbol.'</small></i>';
			}
		}
	]]></add>
	</operation>
	</file>
	<file path="admin/controller/common/menu.php">
	<operation>
		<search><![CDATA[$data['home'] = $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL');]]></search>
		<add position="after"><![CDATA[$data['moneymaker2'] = $this->url->link('module/moneymaker2', 'token=' . $this->session->data['token'], 'SSL');]]></add>
	</operation>
	</file>
	<file path="admin/view/template/common/menu.tpl">
	<operation>
		<search><![CDATA[<li id="dashboard"><a href="<?php echo $home; ?>"><i class="fa fa-dashboard fa-fw"></i> <span><?php echo $text_dashboard; ?></span></a></li>]]></search>
		<add position="after"><![CDATA[<li id="moneymaker2"><a href="<?php echo $moneymaker2; ?>"><i class="fa fa-star fa-fw"></i> <span>Moneymaker<sup>2</sup></span></a></li>]]></add>
	</operation>
	</file>
</modification>