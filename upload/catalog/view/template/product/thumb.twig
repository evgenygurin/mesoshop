<div class="card h-100 shadow-sm border-0">
  {# Product Image #}
  <div class="card-img-top p-4 position-relative" style="background-color: var(--bs-secondary-bg);">
    <a href="{{ href }}" class="d-block text-center">
      <img src="{{ thumb }}" alt="{{ name }}" title="{{ name }}" class="img-fluid" style="max-height: 200px; object-fit: contain;"/>
    </a>
    {% if special %}
      <span class="badge bg-danger position-absolute top-0 end-0 m-3">Sale</span>
    {% endif %}
  </div>

  {# Product Content #}
  <div class="card-body d-flex flex-column">
    {# Product Name #}
    <h5 class="card-title mb-3">
      <a href="{{ href }}" class="text-decoration-none">{{ name }}</a>
    </h5>

    {# Product Description #}
    <p class="card-text text-body-secondary small mb-3 flex-grow-1">{{ description }}</p>

    {# Rating #}
    {% if review_status and rating %}
      <div class="mb-3">
        <div class="d-inline-flex gap-1">
          {% for i in 1..5 %}
            {% if rating < i %}
              <i class="fa-regular fa-star text-warning"></i>
            {% else %}
              <i class="fa-solid fa-star text-warning"></i>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endif %}

    {# Price #}
    {% if price %}
      <div class="mb-3">
        {% if not special %}
          <h4 class="text-primary mb-0">{{ price }}</h4>
        {% else %}
          <h4 class="text-success mb-0">
            {{ special }}
            <small class="text-danger text-decoration-line-through ms-2">{{ price }}</small>
          </h4>
        {% endif %}
        {% if tax %}
          <small class="text-body-secondary d-block">{{ text_tax }} {{ tax }}</small>
        {% endif %}
      </div>
    {% endif %}
  </div>

  {# Action Buttons #}
  <div class="card-footer bg-transparent border-top-0 pt-0">
    <form method="post" data-oc-toggle="ajax" data-oc-load="{{ cart }}" data-oc-target="#cart">
      <div class="btn-group w-100" role="group">
        <button 
          type="submit" 
          formaction="{{ cart_add }}" 
          class="btn btn-primary flex-fill cart-add-btn" 
          data-bs-toggle="tooltip" 
          title="{{ button_cart }}"
          data-loading="true"
          data-loading-text="<span class='spinner-border spinner-border-sm me-2'></span>Добавление..."
          data-loading-size="sm"
          data-success-text="<i class='fas fa-check me-2'></i>Добавлено"
          data-product-id="{{ product_id }}"
        >
          <i class="fa-solid fa-cart-shopping"></i>
          <span class="d-none d-lg-inline ms-2">{{ button_cart }}</span>
        </button>
        <button 
          type="submit" 
          formaction="{{ wishlist_add }}" 
          class="btn btn-outline-danger wishlist-add-btn" 
          data-bs-toggle="tooltip" 
          title="{{ button_wishlist }}"
          data-loading="true"
          data-loading-text="<span class='spinner-border spinner-border-sm'></span>"
          data-loading-size="sm"
          data-success-text="<i class='fas fa-heart text-danger'></i>"
          data-product-id="{{ product_id }}"
        >
          <i class="fa-solid fa-heart"></i>
        </button>
        <button 
          type="submit" 
          formaction="{{ compare_add }}" 
          class="btn btn-outline-secondary compare-add-btn" 
          data-bs-toggle="tooltip" 
          title="{{ button_compare }}"
          data-loading="true"
          data-loading-text="<span class='spinner-border spinner-border-sm'></span>"
          data-loading-size="sm"
          data-success-text="<i class='fas fa-check'></i>"
          data-product-id="{{ product_id }}"
        >
          <i class="fa-solid fa-arrow-right-arrow-left"></i>
        </button>
      </div>
      <input type="hidden" name="product_id" value="{{ product_id }}"/>
      <input type="hidden" name="quantity" value="{{ minimum }}"/>
    </form>
  </div>
</div>

<script>
// Обработчики для кнопок в карточке товара
$(document).ready(function() {
    'use strict';

    // Обработчик добавления в корзину
    $('.cart-add-btn').on('click', function(e) {
        e.preventDefault();
        const $btn = $(this);
        const productId = $btn.data('product-id');
        const formAction = $btn.attr('formaction');
        
        // Показываем loading состояние
        loadingManager.handleButtonClick($btn, async () => {
            // Получаем данные формы
            const formData = new FormData($btn.closest('form')[0]);
            
            // Выполняем AJAX запрос
            const response = await $.ajax({
                url: formAction,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false
            });
            
            // Обновляем счетчик корзины, если есть
            if (response.total) {
                $('#cart-total').html(response.total);
            }
            
            return response;
        }, {
            loadingText: $btn.data('loading-text'),
            successText: $btn.data('success-text'),
            successDelay: 2000,
            errorText: 'Ошибка',
            spinnerSize: 'sm',
            spinnerColor: 'white'
        });
    });

    // Обработчик добавления в избранное
    $('.wishlist-add-btn').on('click', function(e) {
        e.preventDefault();
        const $btn = $(this);
        const formAction = $btn.attr('formaction');
        
        loadingManager.handleButtonClick($btn, async () => {
            const formData = new FormData($btn.closest('form')[0]);
            
            return await $.ajax({
                url: formAction,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false
            });
        }, {
            successText: $btn.data('success-text'),
            successDelay: 2000,
            errorText: 'Ошибка',
            spinnerSize: 'sm',
            spinnerColor: 'danger'
        });
    });

    // Обработчик добавления в сравнение
    $('.compare-add-btn').on('click', function(e) {
        e.preventDefault();
        const $btn = $(this);
        const formAction = $btn.attr('formaction');
        
        loadingManager.handleButtonClick($btn, async () => {
            const formData = new FormData($btn.closest('form')[0]);
            
            const response = await $.ajax({
                url: formAction,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false
            });

            // Обновляем счетчик сравнения, если есть
            if (response.compare_total) {
                $('#compare-total').html(response.compare_total);
            }
            
            return response;
        }, {
            successText: $btn.data('success-text'),
            successDelay: 2000,
            errorText: 'Ошибка',
            spinnerSize: 'sm',
            spinnerColor: 'secondary'
        });
    });
});
</script>
